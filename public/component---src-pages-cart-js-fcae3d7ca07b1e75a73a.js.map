{"version":3,"sources":["webpack:///./src/components/Cart/LineItem/styles.js","webpack:///./src/components/Cart/LineItem/index.js","webpack:///./src/components/Cart/index.js","webpack:///./src/pages/cart.js"],"names":["Wrapper","styled","div","LineItem","props","line_item","useContext","StoreContext","removeLineItem","store","client","checkout","variantImage","variant","image","src","alt","title","height","selectedOptions","map","option","value","console","log","to","product","handle","quantity","price","onClick","id","Cart","line_items","lineItems","key","toString","quantityArr","numberOfItems","reduce","acc","item","subtotalPrice","totalPrice","window","open","webUrl","disabled","length","CartPage"],"mappings":"kZAEO,IAAMA,E,UAAUC,EAAOC,IAAV,KCoDLC,EAhDE,SAAAC,GAAU,IACjBC,EAAcD,EAAdC,UADgB,EAKpBC,qBAAWC,KAFbC,EAHsB,EAGtBA,eAHsB,IAItBC,MAASC,EAJa,EAIbA,OAAQC,EAJK,EAILA,SAGbC,EAAeP,EAAUQ,QAAQC,MACrC,yBACEC,IAAKV,EAAUQ,QAAQC,MAAMC,IAC7BC,IAAQX,EAAUY,MAAf,gBACHC,OAAO,SAEP,KAEEC,EAAkBd,EAAUQ,QAAQM,gBACtCd,EAAUQ,QAAQM,gBAAgBC,KAChC,SAAAC,GAAM,OAAOA,EAAOC,MAAd,OAER,KAMJ,OACE,kBAACtB,EAAD,KACGuB,QAAQC,IAAInB,GACb,kBAAC,OAAD,CAAMoB,GAAE,aAAepB,EAAUQ,QAAQa,QAAQC,OAAzC,KACLf,GAEH,2BACGP,EAAUY,OAEb,2BACCE,GAED,2BACCd,EAAUuB,UAEX,2BACC,IAAMvB,EAAUQ,QAAQgB,MAAQxB,EAAUuB,SAAW,OAEtD,4BAAQE,QAtBS,WACnBtB,EAAeE,EAAQC,EAASoB,GAAI1B,EAAU0B,MAqB5C,YCLSC,EAtCF,WAAO,IAEPrB,EAEPL,qBAAWC,KAFbE,MAASE,SAQLsB,EAAatB,EAASuB,UAAUd,KAAI,SAAAf,GACxC,OAAO,kBAAC,EAAD,CAAU8B,IAAK9B,EAAU0B,GAAGK,WAAY/B,UAAWA,OAGxDgC,EAAc1B,EAASuB,UAAUd,KAAI,SAAAf,GAAS,OAAIA,EAAUuB,YAE5DU,EAAgB,EAMpB,OAJID,EAAY,KACdC,EAAgBD,EAAYE,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,MAIxD,6BACGR,EACD,wCACA,+BAAKtB,EAAS+B,eACd,2BAAIJ,EAAgB,GAAK,wDACzB,6BACA,6BACA,qCACA,+BAAK3B,EAASgC,YACd,6BACA,4BAAQb,QA3BW,WACrBc,OAAOC,KAAKlC,EAASmC,SA0BcC,SAAwC,IAA9BpC,EAASuB,UAAUc,QAA9D,e,YC3BSC,UAPE,kBACf,kBAAC,IAAD,KACE,oCACA,kBAAC,EAAD","file":"component---src-pages-cart-js-fcae3d7ca07b1e75a73a.js","sourcesContent":["import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 2rem 0 2rem 0;\n`","import React, { useContext } from 'react'\nimport { Link } from 'gatsby'\n\nimport StoreContext from '~/context/StoreContext'\nimport { Wrapper } from './styles'\n\nconst LineItem = props => {\n  const { line_item } = props\n  const {\n    removeLineItem,\n    store: { client, checkout },\n  } = useContext(StoreContext)\n\n  const variantImage = line_item.variant.image ? (\n    <img\n      src={line_item.variant.image.src}\n      alt={`${line_item.title} product shot`}\n      height=\"60px\"\n    />\n  ) : null\n\n  const selectedOptions = line_item.variant.selectedOptions\n    ? line_item.variant.selectedOptions.map(\n        option => `${option.value} `\n      )\n    : null\n\n  const handleRemove = () => {\n    removeLineItem(client, checkout.id, line_item.id)\n  }\n\n  return (\n    <Wrapper>\n      {console.log(line_item)}\n      <Link to={`/products/${line_item.variant.product.handle}/`}>\n        {variantImage}\n      </Link>\n      <p>\n        {line_item.title}\n      </p>\n      <p>\n      {selectedOptions}\n      </p>\n      <p>\n      {line_item.quantity}\n      </p>\n      <p>\n      {\"£\" + line_item.variant.price * line_item.quantity + \".00\"}\n      </p>\n      <button onClick={handleRemove}>Remove</button>\n    </Wrapper>\n  )\n}\n\nexport default LineItem\n","import React, { useContext } from 'react'\n\nimport StoreContext from '~/context/StoreContext'\nimport LineItem from './LineItem'\nimport { Link } from 'gatsby'\n\nconst Cart = () => {\n  const {\n    store: { checkout },\n    \n  } = useContext(StoreContext)\n\n  const handleCheckout = () => {\n    window.open(checkout.webUrl)\n  }\n\n  const line_items = checkout.lineItems.map(line_item => {\n    return <LineItem key={line_item.id.toString()} line_item={line_item} />\n  })\n\n  let quantityArr = checkout.lineItems.map(line_item => line_item.quantity)\n\n  let numberOfItems = 0\n\n  if (quantityArr[0]) {\n    numberOfItems = quantityArr.reduce((acc, item) => acc + item)\n  } \n\n  return (\n    <div>\n      {line_items}\n      <h2>Subtotal</h2>\n      <p>£{checkout.subtotalPrice}</p>\n      <p>{numberOfItems > 2 && \"Discount applied (Promotion: Buy 3+ items, save £10)\"}</p>\n      <br />\n      <br />\n      <h2>Total</h2>\n      <p>£{checkout.totalPrice}</p>\n      <br />\n      <button onClick={handleCheckout} disabled={checkout.lineItems.length === 0}>Check out</button>\n    </div>\n  )\n}\n\nexport default Cart\n","import React from 'react'\n\nimport Cart from '~/components/Cart'\nimport { Container } from '~/utils/styles'\n\nconst CartPage = () => (\n  <Container>\n    <h1>Cart</h1>\n    <Cart />\n  </Container>\n)\n\nexport default CartPage\n"],"sourceRoot":""}